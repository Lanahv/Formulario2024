Vou ajudar a organizar o seu código para que funcione corretamente, desde o formulário HTML até a inserção dos dados no banco de dados via PHP. Vou assumir que você tem dois arquivos PHP: um para a conexão com o banco de dados (conexao.php) e outro para o processamento do formulário (process_form.php).
Estrutura de Arquivos:

    index.html - O formulário de contato.
    conexao.php - O arquivo de conexão com o banco de dados.
    process_form.php - O arquivo que processa o formulário e insere os dados no banco de dados.

index.html

html

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formulário de Contato</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <h2>Contato</h2>
    <form action="process_form.php" method="post">
        <label for="nome">Nome:</label>
        <input type="text" id="nome" name="nome" required><br>

        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required><br>

        <label for="mensagem">Mensagem:</label>
        <textarea id="mensagem" name="mensagem" rows="4" required></textarea><br>

        <input type="submit" value="Enviar">
    </form>

    <script src="scripts.js"></script>
</body>
</html>

conexao.php

php

<?php
$user = 'root';
$password = ''; // Coloque a senha do usuário root se existir
$database = 'formulariolocal'; // Nome do banco de dados
$port = 3306; // Porta padrão

$mysqli = new mysqli('127.0.0.1', $user, $password, $database, $port);

if ($mysqli->connect_error) {
    die('Connect Error (' . $mysqli->connect_errno . ') '
            . $mysqli->connect_error);
}

// Exibir informações da conexão
echo '<p>A conexão com o Banco de Dados: está OK '. $mysqli->host_info.'</p>';
echo '<p>Server '.$mysqli->server_info.'</p>';
echo '<p>Initial charset: '.$mysqli->character_set_name().'</p>';

// Consulta para obter o nome do banco de dados atual
$result = $mysqli->query("SELECT DATABASE()");
if ($result) {
    $row = $result->fetch_row();
    echo '<p>Nome do banco de dados conectado: ' . $row[0] . '</p>';
} else {
    echo '<p>Não foi possível obter o nome do banco de dados.</p>';
}
?>

process_form.php

php

<?php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Pega os dados do formulário
    $nome = htmlspecialchars($_POST['nome']);
    $email = htmlspecialchars($_POST['email']);
    $mensagem = htmlspecialchars($_POST['mensagem']);

    // Inclui o arquivo de conexão
    include 'conexao.php';

    // Prepara a declaração SQL
    $sql = "INSERT INTO contato (nome, email, mensagem) VALUES (?, ?, ?)";
    $stmt = $mysqli->prepare($sql);

    if ($stmt) {
        // Bind dos parâmetros
        $stmt->bind_param("sss", $nome, $email, $mensagem);

        // Executa a declaração
        if ($stmt->execute()) {
            echo "Obrigado, $nome! Sua mensagem foi enviada com sucesso.";
        } else {
            echo "Erro: " . $stmt->error;
        }

        // Fecha a declaração
        $stmt->close();
    } else {
        echo "Erro na preparação da declaração: " . $mysqli->error;
    }

    // Fecha a conexão
    $mysqli->close();
}
?>

styles.css

css

body {
    font-family: Arial, sans-serif;
    margin: 20px;
}

h2 {
    color: #333;
    text-align: center;
}

form {
    max-width: 500px;
    margin: 0 auto;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 10px;
    background-color: #f9f9f9;
}

label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
}

input[type="text"],
input[type="email"],
textarea {
    width: 100%;
    padding: 8px;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

input[type="submit"] {
    background-color: #4CAF50;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

input[type="submit"]:hover {
    background-color: #45a049;
}

scripts.js

javascript

document.addEventListener("DOMContentLoaded", function() {
    const form = document.querySelector("form");

    form.addEventListener("submit", function(event) {
        // Exemplo de validação simples
        const nome = document.getElementById("nome").value;
        const email = document.getElementById("email").value;

        if (nome === "" || email === "") {
            alert("Por favor, preencha todos os campos.");
            event.preventDefault();
        }
    });
});

Estrutura do Banco de Dados

Certifique-se de que a tabela contato existe e tem a estrutura correta. Abaixo está um exemplo da criação dessa tabela:

sql

CREATE TABLE IF NOT EXISTS `contato` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `nome` varchar(255) NOT NULL,
  `email` varchar(255) NOT NULL,
  `mensagem` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

Certifique-se de importar a estrutura acima no seu banco de dados MySQL. Com essas instruções, você deve ter um formulário funcional que conecta ao banco de dados e insere os dados enviados pelo usuário.


/////////////////////////////////////////////////////////////////////////////////
Para hospedar seu formulário nos serviços do GitHub Pages e Netlify, você precisará fazer algumas adaptações. Ambos serviços são voltados para hospedar sites estáticos, e seu formulário atual depende de PHP para processar os dados, o que não é suportado diretamente por esses serviços. No entanto, você pode utilizar serviços de terceiros para gerenciar os envios de formulários, como o Formspree ou o Netlify Forms. Aqui está como você pode configurar seu projeto para ambos os serviços:
Usando o GitHub Pages com Formspree

    Crie uma conta no Formspree: Vá para Formspree e crie uma conta.

    Configure o formulário no Formspree:
        No site do Formspree, crie um novo formulário.
        Você receberá uma URL de ação do formulário, algo como https://formspree.io/f/[your-form-id].

    Atualize seu index.html:
        Altere a ação do formulário para a URL do Formspree.
        Remova ou comente o JavaScript de validação se necessário.

html

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formulário de Contato</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <h2>Contato</h2>
    <form action="https://formspree.io/f/[your-form-id]" method="post">
        <label for="nome">Nome:</label>
        <input type="text" id="nome" name="nome" required><br>

        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required><br>

        <label for="mensagem">Mensagem:</label>
        <textarea id="mensagem" name="mensagem" rows="4" required></textarea><br>

        <input type="submit" value="Enviar">
    </form>

    <script src="scripts.js"></script>
</body>
</html>

    Publique no GitHub Pages:
        Suba o repositório para o GitHub.
        Vá para as configurações do repositório e habilite o GitHub Pages.

Usando o Netlify com Netlify Forms

    Prepare o HTML para o Netlify Forms:
        Adicione um atributo data-netlify="true" ao seu formulário.

html

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formulário de Contato</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <h2>Contato</h2>
    <form action="/thank-you" method="POST" data-netlify="true">
        <label for="nome">Nome:</label>
        <input type="text" id="nome" name="nome" required><br>

        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required><br>

        <label for="mensagem">Mensagem:</label>
        <textarea id="mensagem" name="mensagem" rows="4" required></textarea><br>

        <input type="submit" value="Enviar">
    </form>

    <script src="scripts.js"></script>
</body>
</html>

    Adicione um arquivo _redirects para gerenciar a página de agradecimento:

    Crie um arquivo _redirects na raiz do seu projeto e adicione a seguinte linha:

bash

/thank-you /index.html 200

    Configure o Netlify:
        Faça login no Netlify e crie um novo site a partir do seu repositório GitHub.
        O Netlify detectará automaticamente o formulário e permitirá que você visualize os envios diretamente no painel do Netlify.

Considerações finais

Ao usar serviços como Formspree ou Netlify Forms, você evita a necessidade de um backend PHP para processar os formulários. Ambos serviços são confiáveis e bastante utilizados para esse propósito.

Se você deseja ainda usar um backend para processar os dados de forma mais personalizada, considere serviços de hospedagem como Heroku, DigitalOcean, ou outros que suportem PHP. Nesses casos, o processo seria diferente, envolvendo a configuração de um servidor completo que suporta PHP e MySQL.